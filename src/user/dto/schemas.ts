/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * User Roles API
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from "zod";

export const getCurrentUserResponse = zod.object({
  id: zod.string(),
  email: zod.string(),
  name: zod.string(),
  preferredLang: zod.enum(["EN", "UA", "PL"]),
  activeRole: zod.enum(["TRAINER", "TRAINEE", "PARENT", "ADMIN"]),
  roles: zod.array(zod.enum(["TRAINER", "TRAINEE", "PARENT", "ADMIN"])),
  trainerStepsLeft: zod.array(zod.string()).nullable(),
  traineeStepsLeft: zod.array(zod.string()).nullable(),
  parentStepsLeft: zod.array(zod.string()).nullable(),
  trainerProfile: zod
    .object({
      gyms: zod.array(zod.string()).optional(),
      groups: zod.array(zod.string()).optional(),
      trainings: zod.array(zod.string()).optional(),
      isOnboardingCompleted: zod.boolean().optional(),
      subscriptions: zod.array(zod.string()).optional(),
    })
    .nullable(),
  traineeProfile: zod
    .object({
      isOnboardingCompleted: zod.boolean().optional(),
    })
    .nullable(),
  parentProfile: zod
    .object({
      isOnboardingCompleted: zod.boolean().optional(),
    })
    .nullable(),
});

export const getUserOnboardingResponse = zod.object({
  activeRole: zod.enum(["TRAINER", "TRAINEE", "PARENT", "ADMIN"]),
});

export const updateUserLanguageBody = zod.object({
  preferredLang: zod.enum(["en", "ua", "pl"]),
});

export const updateUserLanguageResponse = zod.object({
  message: zod.string().optional(),
});

export const updateUserRoleBody = zod.object({
  role: zod.enum(["TRAINER", "TRAINEE", "PARENT", "ADMIN"]),
});

export const updateUserRoleResponse = zod.object({
  message: zod.string().optional(),
});

export const initializeUserRoleBody = zod.object({
  role: zod.enum(["TRAINER", "TRAINEE", "PARENT", "ADMIN"]),
});

export const initializeUserRoleResponse = zod.object({
  isFirstTime: zod.boolean(),
});
