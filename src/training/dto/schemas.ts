/**
 * Generated by orval v7.8.0 üç∫
 * Do not edit manually.
 * Training API
 * OpenAPI spec version: 1.0.0
 */
import { z as zod } from "zod";

export const getListQueryPageDefault = 1;
export const getListQueryLimitDefault = 10;
export const getListQuerySearchDefault = "";
export const getListQuerySortOrderDefault = "desc";

export const getListQueryParams = zod.object({
  page: zod.coerce
    .number()
    .default(getListQueryPageDefault)
    .describe("Page number"),
  limit: zod.coerce
    .number()
    .default(getListQueryLimitDefault)
    .describe("Limit number of trainings per page"),
  search: zod.coerce.string().optional().describe("Search query"),
  sortOrder: zod
    .enum(["asc", "desc"])
    .default(getListQuerySortOrderDefault)
    .describe("Sort order"),
  filters: zod
    .object({
      gymIds: zod.array(zod.coerce.string()).optional(),
      groupIds: zod.array(zod.coerce.string()).optional(),
      trainerIds: zod.array(zod.coerce.string()).optional(),
      startDate: zod.coerce.string().datetime({}).optional(),
    })
    .optional()
    .describe("Filters"),
});

export const getListResponse = zod.object({
  trainings: zod.array(
    zod.object({
      id: zod.string().optional(),
      name: zod.string().optional(),
      startDate: zod.string().datetime({}).optional(),
      gymName: zod.string().optional(),
      groupName: zod.string().optional(),
      trainers: zod
        .array(
          zod.object({
            id: zod.string().optional(),
            firstName: zod.string().optional(),
            lastName: zod.string().optional(),
          }),
        )
        .optional(),
    }),
  ),
  total: zod.number(),
});
